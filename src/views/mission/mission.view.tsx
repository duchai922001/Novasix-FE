import React, { useEffect, useState } from "react";
import { Button, Card, Collapse, message } from "antd";
import { UserService } from "@/services/user.service";
import { handleError } from "@/utils/catch-error";
import { WalletService } from "@/services/wallet.service";
import { MISSIONTYPE } from "@/constants/mission.constant";
import { MissionService } from "@/services/mission.service";

const { Panel } = Collapse;

const Mission = () => {
  const [selectedMission, setSelectedMission] = useState(null);
  const [userInfo, setUserInfo] = useState({});
  const missionCategories = [
    {
      title: "T√†i kho·∫£n m·ªõi",
      missions: [
        {
          subTitle: "C·∫≠p nh·∫≠t ƒë·∫ßy ƒë·ªß th√¥ng tin c√° nh√¢n",
          target: "ƒêi·ªÅn t·∫•t c·∫£ th√¥ng tin c√° nh√¢n",
          description: "B·∫°n c·∫ßn nh·∫≠p th√¥ng tin c√° nh√¢n ƒë·ªÉ ho√†n th√†nh nhi·ªám v·ª•.",
          reward: 20,
          isReward: false,
          onlyOneReward: true,
        },
        {
          subTitle: "T·∫°o 1 task daily ƒë·∫ßu ti√™n",
          target: "T·∫°o nhi·ªám v·ª• ƒë·∫ßu ti√™n trong danh s√°ch h·∫±ng ng√†y",
          description: "B·∫Øt ƒë·∫ßu b·∫±ng c√°ch t·∫°o m·ªôt nhi·ªám v·ª• nh·ªè.",
          reward: 20,
          isReward: userInfo?.onBoardDaily === 1,
        },
        {
          subTitle: "T·∫°o 1 task weekly ƒë·∫ßu ti√™n",
          target: "T·∫°o nhi·ªám v·ª• ƒë·∫ßu ti√™n trong danh s√°ch h·∫±ng tu·∫ßn",
          description: "B·∫Øt ƒë·∫ßu b·∫±ng c√°ch t·∫°o m·ªôt nhi·ªám v·ª• nh·ªè.",
          reward: 20,
          isReward: false,
        },
        {
          subTitle: "T·∫°o 1 task monthly ƒë·∫ßu ti√™n",
          target: "T·∫°o cu·ªôc h·∫πn ƒë·∫ßu ti√™n trong th√°ng",
          description: "B·∫Øt ƒë·∫ßu v√†o tap monthly v√† t·∫°o.",
          reward: 20,
          isReward: false,
        },
      ],
    },
    {
      title: "Nhi·ªám v·ª• h·∫±ng ng√†y",
      missions: [
        "Th·ª±c hi·ªán 5 task",
        "S·ª≠ d·ª•ng 3 pomodoro",
        "Vi·∫øt 1 l·ªùi bi·∫øt ∆°n",
      ],
    },
    {
      title: "Nhi·ªám v·ª• h√†ng tu·∫ßn",
      missions: ["Vi·∫øt weekly reflection", "S·ª≠ d·ª•ng 14 pomodoro"],
    },
    {
      title: "Nhi·ªám v·ª• h·∫±ng th√°ng",
      missions: ["S·ª≠ d·ª•ng 60 pomodoro"],
    },
  ];

  const asyncUserCurrent = async () => {
    try {
      const response = await UserService.getUserCurrent();
      setUserInfo(response);
    } catch (error) {
      handleError(error);
    }
  };
  const handleReward = async (reward: number) => {
    try {
      const payload = {
        reward,
        type: MISSIONTYPE.ONBOARD_DAILY,
      };

      await MissionService.rewardToken(payload);
      setUserInfo((prev) => ({
        ...prev,
        onBoardDaily: 2,
      }));

      message.success("Nh·∫≠n th∆∞·ªüng th√†nh c√¥ng");
    } catch (error) {
      handleError(error);
    }
  };
  useEffect(() => {
    asyncUserCurrent();
  }, []);

  return (
    <div className="mission-container" style={{ display: "flex", gap: "20px" }}>
      {/* Sidebar nhi·ªám v·ª• */}
      <div className="mission-sidebar" style={{ width: "30%" }}>
        <Collapse accordion className="mission-collapse">
          {missionCategories.map((category, index) => (
            <Panel
              header={
                <p style={{ fontWeight: "bold", color: "white" }}>
                  {category.title}
                </p>
              }
              key={index}
              className="mission-panel"
            >
              {category.missions.map((mission, idx) => (
                <p
                  key={idx}
                  className={`mission-item ${
                    selectedMission === mission ? "active" : ""
                  }`}
                  style={{
                    cursor: "pointer",
                    padding: "5px",
                    borderBottom: "1px solid #ddd",
                  }}
                  onClick={() =>
                    setSelectedMission(
                      typeof mission === "string"
                        ? { subTitle: mission } // N·∫øu ch·ªâ l√† string, chuy·ªÉn th√†nh object
                        : mission
                    )
                  }
                >
                  {typeof mission === "string" ? mission : mission.subTitle}
                </p>
              ))}
            </Panel>
          ))}
        </Collapse>
      </div>

      {/* N·ªôi dung nhi·ªám v·ª• */}
      <Card
        className="mission-content"
        style={{ width: "70%", padding: "20px" }}
      >
        <h2 className="mission-title">
          {selectedMission?.subTitle || "Ch·ªçn m·ªôt nhi·ªám v·ª•"}
        </h2>

        {selectedMission && (
          <>
            <div className="mission-info">
              <strong>M·ª•c ti√™u:</strong>
              <span>
                {" "}
                {selectedMission.target || "Ho√†n th√†nh nhi·ªám v·ª• n√†y"}{" "}
              </span>
            </div>

            <div className="mission-description">
              <strong>Mi√™u t·∫£:</strong>
              <span>
                {" "}
                {selectedMission.description ||
                  "H√£y ho√†n th√†nh nhi·ªám v·ª• n√†y ƒë·ªÉ nh·∫≠n th∆∞·ªüng!"}{" "}
              </span>
            </div>

            {/* Ph·∫ßn th∆∞·ªüng */}
            {selectedMission.reward && (
              <div className="mission-rewards">
                <strong>Th∆∞·ªüng:</strong>
                <p>üèÖ {selectedMission.reward} token</p>
              </div>
            )}

            {/* N√∫t Nh·∫≠n Th∆∞·ªüng */}
            <Button
              type="primary"
              className="mission-button"
              disabled={!selectedMission.isReward}
              onClick={() => handleReward(selectedMission.reward)}
            >
              Nh·∫≠n th∆∞·ªüng
            </Button>
          </>
        )}
      </Card>
    </div>
  );
};

export default Mission;
